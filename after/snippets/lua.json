{
  "do":                { "prefix": "do",     "body": "do\n\t$0\nend" },
  "else":              { "prefix": "  el",   "body": "else\n\t$0" },
  "else-tab":          { "prefix": "\tel",   "body": "else\n\t$0" },
  "elseif":            { "prefix": "eif",    "body": "elseif $1 then\n\t$0\nend" },
  "for ipairs":        { "prefix": "fori",   "body": "for ${1:i}, ${2:v} in ipairs($3) do\n\t$0\nend" },
  "for pairs":         { "prefix": "forp",   "body": "for ${1:k}, ${2:v} in pairs($3) do\n\t$0\nend" },
  "for":               { "prefix": "for",    "body": "for ${1:i} = ${2:1}, ${3:to} do\n\t$0\nend" },
  "function (inline)": { "prefix": "ff",     "body": "function($1) $0 end" },
  "function":          { "prefix": "f",      "body": "function($1)\n\t$0\nend" },
  "if":                { "prefix": "if",     "body": "if $1 then\n\t$0\nend" },
  "if-else":           { "prefix": "ife",    "body": "if $1 then\n\t$0\nelse\n\t-- TODO\nend" },
  "local":             { "prefix": "l",      "body": "local $1 = $0" },
  "pcall":             { "prefix": "pcall",  "body": "local ok, $1 = pcall($0)" },
  "repeat":            { "prefix": "repeat", "body": "repeat\n\t$1\nuntil $0" },
  "then":              { "prefix": "then",   "body": "then\n\t$0\nend" },
  "while":             { "prefix": "while",  "body": "while $1 do\n\t$0\nend" },

  "benchmark":   { "prefix": "bench", "body": "_G.${1:durations} = {}\nlocal ${2:start_time} = vim.loop.hrtime()\ntable.insert(_G.$1, 0.000001 * (vim.loop.hrtime() - $2))" },
  "vim.api":     { "prefix": "api",   "body": "vim.api.nvim_" },
  "vim.tbl_map": { "prefix": "map",   "body": "vim.tbl_map($1, $2)" },

  "describe": { "prefix": "desc", "body": "describe('$1',function()\n\t$0\nend)" },
  "it":       { "prefix": "it",   "body": "it('$1',function()\n\t$0\nend)" },

  "Remove prefixes": { "prefix": [ "fu", "f=", "ll", "p", "lpca" ] }
}
